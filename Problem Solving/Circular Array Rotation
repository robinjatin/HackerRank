import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the circularArrayRotation function below.
    /*static int[] circularArrayRotation(int[] a, int k, int[] queries) {
        int n=a.length;
        while(k>0){
            int last=a[n-1];
        for(int i=n-2;i>=0;i--){
         
            a[i+1]=a[i];
         }
         a[0]=last;
        k--;
        }
        int arr[]=new int[queries.length];
        for(int i=0;i<queries.length;i++)
        {
            arr[i]=a[queries[i]];
        }
        for(int i=0;i<n;i++)
        {
            System.out.print(a[i]+" ");
        }
        System.out.println();
        return arr;
    }
    

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nkq = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nkq[0]);

        int k = Integer.parseInt(nkq[1]);

        int q = Integer.parseInt(nkq[2]);

        int[] a = new int[n];

        String[] aItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int aItem = Integer.parseInt(aItems[i]);
            a[i] = aItem;
        }

        int[] queries = new int[q];
    
        for (int i = 0; i < q; i++) {
            int queriesItem = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
            queries[i] = queriesItem;
        }

        int[] result = circularArrayRotation(a, k, queries);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
*/
public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int N = in.nextInt();
    int K = in.nextInt();
    int Q = in.nextInt();
    int rot = K % N;
    int[] arr = new int[N];
    for (int i = 0; i < N; i++)
        arr[i] = in.nextInt();
    for (int i = 0; i < Q; i++) {
        int idx = in.nextInt();
        if (idx - rot >= 0)
            System.out.println(arr[idx - rot]);
        else
            System.out.println(arr[idx - rot + arr.length]);
        }
    }}

